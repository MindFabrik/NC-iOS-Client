# rubocop:disable Style/SignalException
ENV['SWIFTLINT_VERSION'] = '0.34.0'

require File.expand_path('../ext/git_swift_linter.rb', __FILE__)

gitswiftlinter = GitSwiftLinter.new(self)
gitswiftlinter.lint_files
gitswiftlinter.lines_of_code
gitswiftlinter.pr_description
gitswiftlinter.work_in_progress
gitswiftlinter.updated_changelog

junit_files = Dir.glob('build/reports/*.xml')
junit.headers = [:classname, :name]
junit.parse_files junit_files
junit.report

# Check for warnings
report_files = Dir.glob('build/reports/*.json').select

report_files.each do |json_file|
  next if report_files.to_a.size > 1 && json_file.include?('errors.json')

  name = File.basename(json_file, File.extname(json_file)).sub('_', ' ')
  name = name.split.map(&:capitalize).join(' ')

  # Put the project name in front of the summary message.
  json = File.read(json_file)
  data = JSON.parse(json)
  data['tests_summary_messages'].each do |message|
    message.insert(1, ' ' + name + ':') unless message.empty?
  end
  File.open(json_file, 'w') do |f|
    f.puts JSON.pretty_generate(data)
  end

  xcode_summary.ignored_files = 'Submodules/**'
  xcode_summary.inline_mode = true
  xcode_summary.report json_file
end

unless report_files.to_a.empty?
  # Show Code coverage report
  # Expecting this Dangerfile to be in:
  # `source/Submodules/WeTransfer-iOS-CI/Danger/`
  begin
    minimum_coverage_percentage = ENV['MINIMUM_COVERAGE_PERCENTAGE'].to_f || 75
    if ENV['WORKSPACE_PATH']
      xcov.report(
        scheme: ENV['SCHEME'],
        workspace: ENV['WORKSPACE_PATH'],
        minimum_coverage_percentage: minimum_coverage_percentage,
        include_targets: ENV['XCOV_TARGETS'],
        output_directory: 'xcov_output',
        source_directory: '../../../'
      )
    else
      xcov.report(
        scheme: ENV['SCHEME'],
        minimum_coverage_percentage: minimum_coverage_percentage,
        include_targets: ENV['XCOV_TARGETS'],
        output_directory: 'xcov_output',
        source_directory: '../../../'
      )
    end
  rescue
    warn('Code coverage creation failed')
  end
end

# Run SwiftLint for source code and tests
swiftlint_source_config_file = File.join(
  Dir.pwd,
  'Submodules/WeTransfer-iOS-CI/SwiftLint',
  '.swiftlint-source.yml'
)
swiftlint_tests_config_file = File.join(
  Dir.pwd,
  'Submodules/WeTransfer-iOS-CI/SwiftLint',
  '.swiftlint-tests.yml'
)

swiftlint.verbose = true
swiftlint.config_file = swiftlint_source_config_file
swiftlint.lint_files inline_mode: true

swiftlint.verbose = true
swiftlint.config_file = swiftlint_tests_config_file
swiftlint.lint_files inline_mode: true
